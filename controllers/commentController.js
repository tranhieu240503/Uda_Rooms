const Comment = require("../models/Comments"); // ‚úÖ Import ƒë√∫ng model Comments

const createComment = async (req, res) => {
  console.log("üîπ Headers nh·∫≠n ƒë∆∞·ª£c:", req.headers); 
  console.log("üîπ Body nh·∫≠n ƒë∆∞·ª£c:", req.body); // Ki·ªÉm tra body c√≥ d·ªØ li·ªáu kh√¥ng

  // Ki·ªÉm tra xem body c√≥ d·ªØ li·ªáu kh√¥ng
  if (!req.body || Object.keys(req.body).length === 0) {
    return res.status(400).json({ error: "Kh√¥ng nh·∫≠n ƒë∆∞·ª£c d·ªØ li·ªáu trong body" });
  }

  const { user_id, post_id, content } = req.body;

  // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
  if (!user_id || !content) {
    return res.status(400).json({ error: "Thi·∫øu user_id ho·∫∑c n·ªôi dung" });
  }

  try {
    // T·∫°o b√¨nh lu·∫≠n m·ªõi
    const newComment = await Comment.create({ user_id, post_id, content, status: "ch∆∞a s·ª≠a" });
    return res.status(201).json({ message: "B√¨nh lu·∫≠n ƒë√£ ƒë∆∞·ª£c t·∫°o", comment: newComment });
  } catch (error) {
    console.error("‚ùå L·ªói khi t·∫°o b√¨nh lu·∫≠n:", error);
    return res.status(500).json({ error: "L·ªói t·∫°o b√¨nh lu·∫≠n", details: error.message });
  }
};

const getCommentsByPost = async (req, res) => {
  try {
    const { post_id } = req.params;

    if (!post_id) {
      return res.status(400).json({ error: "Thi·∫øu post_id" });
    }

    const comments = await Comment.findAll({
      where: { post_id },
      order: [["createdAt", "ASC"]],
    });

    return res.status(200).json({ comments });
  } catch (error) {
    console.error("L·ªói khi l·∫•y danh s√°ch b√¨nh lu·∫≠n:", error);
    return res.status(500).json({ error: "L·ªói l·∫•y danh s√°ch b√¨nh lu·∫≠n", details: error.message });
  }
};

const updateComment = async (req, res) => {
  try {
    const { idcomment } = req.params;
    const { content, image } = req.body;

    const comment = await Comment.findByPk(idcomment);
    if (!comment) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y b√¨nh lu·∫≠n" });
    }

    // C·∫≠p nh·∫≠t b√¨nh lu·∫≠n
    await comment.update({
      content: content || comment.content,
      image: image || comment.image,
      status: "ƒë√£ s·ª≠a",
    });

    return res.status(200).json({ message: "B√¨nh lu·∫≠n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t", comment });
  } catch (error) {
    console.error("L·ªói khi c·∫≠p nh·∫≠t b√¨nh lu·∫≠n:", error);
    return res.status(500).json({ error: "L·ªói c·∫≠p nh·∫≠t b√¨nh lu·∫≠n", details: error.message });
  }
};
const deleteComment = async (req, res) => {
    try {
      const { idcomment } = req.params;
  
      const comment = await Comment.findByPk(idcomment);
      if (!comment) {
        return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y b√¨nh lu·∫≠n" });
      }
  
      // X√≥a b√¨nh lu·∫≠n
      await comment.destroy();
  
      return res.status(200).json({ message: "B√¨nh lu·∫≠n ƒë√£ ƒë∆∞·ª£c x√≥a" });
    } catch (error) {
      console.error("L·ªói khi x√≥a b√¨nh lu·∫≠n:", error);
      return res.status(500).json({ error: "L·ªói x√≥a b√¨nh lu·∫≠n", details: error.message });
    }
  };
module.exports = { createComment, getCommentsByPost, updateComment, deleteComment};
